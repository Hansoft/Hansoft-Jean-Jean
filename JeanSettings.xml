<?xml version="1.0" encoding="utf-8" ?>
<Configuration>
  
  <!--
  Configuration - Loading Assemblies
  ==================================
  Custom assemblies that should be loaded on startup. Typically this is used to load additional behaviors but it can really
  be used to load any assembly, for example a library that is used by a behavior that you are implementing. To create add an additional
  behavior you need to create a shared library (DLL) with a class that subtypes the abstract class AbstractBehavior. See also the provided
  examples NumberBehavior, CopyBehavior, DeriveBehavior, and DefaultValueBehavior.
   -->
  <LoadAssemblies>
    <Assembly Path="NumberBehavior.dll" />
    <Assembly Path="CopyBehavior.dll" />
    <Assembly Path="DeriveBehavior.dll" />
    <Assembly Path="DefaultValueBehavior.dll" />
    <Assembly Path="DerivedColumnExpressionExample.dll" />
  </LoadAssemblies>op
  
  <!--
  Configuration - Connecting to a Hansoft Database
  =================================================
    The connection parameters are common for all behaviors, hence Jean for Hansoft can currently only operate on one database at the time,
  
    HansoftServerHost         : IP or DNS name of the Hansoft server
    HansoftServerPort         : The listen port of the Hansoft server
    HansoftSdkUser            : Name of the Hansoft SDK User account
    HansoftSdkUserPassword    : Password of the Hansoft SDK User account
    HansoftDatabase           : Name of the Hansoft Database to get data from
    EventWindow               : The max number of milliseconds that events will be buffered/queued for. This is used to avoid excessive server load when
                                you have behaviors that potentially have a significant impact on the server load.
    -->
  <Connection HansoftServerHost="localhost" HansoftServerPort="50257" HansoftDatabase="Reporting" HansoftSdkUser="sdk" HansoftSdkUserPassword="sdk" EventWindow="500"/>
  
  <!-- 
  In the Behaviors section you specify what behaviors that you want to apply you can specify multiple behaviors of the same or different types as you like.
  NOTE: Whenever you add additional behaviors it is important that you monitor server load carefully for some time including peak usage to avoid adding
  to many performance demanding behaviors that risk to be detrimental to server performance with an impact to human users.
  -->
  <Behaviors>
  
    <!--
    Number Behavior
    ===============
    This behavior useful if you want to have a ranking number in the product backlog hierarchy in Hansoft. The number is
    kept in a selectable Hansoft column (of type text). When the column is added to your Hansoft project it should be set
    to a readonly column so it isn't advertently changed.

    The numbering is updated automatically as items in the product backlog hierarchy are moved/added/deleted.
    
    HansoftProject            : Name of the Hansoft project
    View                      : Specifies the View to which the numbering should be applied (Agile, Scheduled, Backlog)
    NumberingStyle            : Hierarchical numbering mean to e.g. to denote the second child of the first parent as 1.2, the default is Flat
                                numbering, i.e. to number each set of siblings 1, 2, 3 and so on. Hence the supported values are "Hierarchical" or "Flat".
    ColumnName                : Specifies the Hansoft column to keep the numbering, this should be a readonly custom column of type Text
    LabelLevels               : Only specified levels in the hierarchy will be labeled. Levels are counted from the top staring with 1.
                                Specifying this setting is exclusive with specifying the IgnoreLevels setting.
    IgnoreLevels              : Specified levels will not be labeled.  Levels are counted from the top staring with 1.
                                Specifying this setting is exclusive with specifying the LabelLevels setting.
    -->

    <NumberBehavior HansoftProject="Development Program" View="Backlog" ColumnName="Rank" NumberingStyle="Hierarchical" LabelLevels="" IgnoreLevels="" />

    <!--
    Copy Behavior
    =============
    This is useful if you have linked items and you want to propagate data to items that have links. The linked items can
    potentially be in separate projects. The data is updated automatically as the data on the source items are changed.
    
    TargetProject             : The Hansoft project containing the items to which data should be copied
    TargetView                : Specifies the View to which data should be copied (Agile, Scheduled, Bugs, Backlog)
    TargetFind                : A Find query that specifies the items to which data should be copied.
    SourceProject             : The Hansoft project containing the items from which data should be copied
    SourceView                : Specifies the View from which data should be copied (Agile, Scheduled, Bugs, Backlog)
    SourceFind                : A Find query that specifies the items from which data should be copied.
    
    For each column that should be copied you then specify one ColumnMapping element. The ColumnMapping should contain one Source element
    and one Target Element that each should contain one subelement. The Subeelement can either be of type CustomColumn where the name of
    the column is specified with the Name attribute, or one of the following to indicate one of the builtin columns in Hansoft:
    * Risk
    * Priority
    * EstimatedDays
    * Category
    * Points
    * Status
    * Confidence
    * Hyperlink
    * Name
    * WorkRemaining
    
    Generally speaking it is safest to map columns of the same type to one another. But as long as it possible to convert a value from one
    type or another it is possible to map one column type to another type. For example, all column types can be mapped to a Text type column.
    
    Examples:
    TODO: Come up with some reasonable examples
    -->
    <!--
    <CopyBehavior TargetProject="Portfolio" TargetView="Backlog" TargetFind="" SourceProject="Development Program" SourceView="Backlog" SourceFind="">
      <ColumnMapping>
        <Source>
          <CustomColumn Name="Aggregated Status"/>
        </Source>
        <Target>
          <Status />
        </Target>
      </ColumnMapping>
      <ColumnMapping>
        <Source>
          <CustomColumn Name="Aggregated Estimated days"/>
        </Source>
        <Target>
          <EstimatedDays />
        </Target>
      </ColumnMapping>
      <ColumnMapping>
        <Source>
          <CustomColumn Name="Days completed"/>
        </Source>
        <Target>
          <CustomColumn Name="Days completed"/>
        </Target>
      </ColumnMapping>
      <ColumnMapping>
        <Source>
          <CustomColumn Name="Product Owner"/>
        </Source>
        <Target>
          <CustomColumn Name="Product Owner"/>
        </Target>
      </ColumnMapping>
      <ColumnMapping>
        <Source>
          <CustomColumn Name="Estimated Release Date"/>
        </Source>
        <Target>
          <CustomColumn Name="Estimated Release Date"/>
        </Target>
      </ColumnMapping>
    </CopyBehavior>
    -->
    <CopyBehavior TargetProject="Development Program" TargetView="Backlog" TargetFind="" SourceProject="Portfolio" SourceView="Backlog" SourceFind="">
      <ColumnMapping>
        <Source>
          <Name />
        </Source>
        <Target>
          <Name />
        </Target>
      </ColumnMapping>
    </CopyBehavior>
    <!--
    <CopyBehavior TargetProject="Reporting" TargetView="Bugs" TargetFind="&quot;Status Workflow&quot;=New" SourceProject="Reporting" SourceView="Bugs" SourceFind="&quot;Status Workflow&quot;=Closed">
      <ColumnMapping>
        <Source>
          <CustomColumn Name="Text" />
        </Source>
        <Target>
          <CustomColumn Name="Text" />
        </Target>
      </ColumnMapping>
      <ColumnMapping>
        <Source>
          <CustomColumn Name="Single Choice" />
        </Source>
        <Target>
          <CustomColumn Name="Single Choice" />
        </Target>
      </ColumnMapping>
      <ColumnMapping>
        <Source>
          <CustomColumn Name="Folk" />
        </Source>
        <Target>
          <CustomColumn Name="Folk" />
        </Target>
      </ColumnMapping>
      <ColumnMapping>
        <Source>
          <CustomColumn Name="Datum" />
        </Source>
        <Target>
          <CustomColumn Name="Datum" />
        </Target>
      </ColumnMapping>
      <ColumnMapping>
        <Source>
          <CustomColumn Name="Number" />
        </Source>
        <Target>
          <CustomColumn Name="Number" />
        </Target>
      </ColumnMapping>
      <ColumnMapping>
        <Source>
          <Priority />
        </Source>
        <Target>
          <Priority />
        </Target>
      </ColumnMapping>
      <ColumnMapping>
        <Source>
          <Status />
        </Source>
        <Target>
          <Status />
        </Target>
      </ColumnMapping>
      <ColumnMapping>
        <Source>
          <Confidence />
        </Source>
        <Target>
          <Confidence />
        </Target>
      </ColumnMapping>
      <ColumnMapping>
        <Source>
          <Risk />
        </Source>
        <Target>
          <Risk />
        </Target>
      </ColumnMapping>
      <ColumnMapping>
        <Source>
          <WorkRemaining />
        </Source>
        <Target>
          <WorkRemaining />
        </Target>
      </ColumnMapping>
      <ColumnMapping>
        <Source>
          <Name />
        </Source>
        <Target>
          <Name />
        </Target>
      </ColumnMapping>
    </CopyBehavior>
    -->
      <!--
    <CopyBehavior TargetProject="Links" TargetView="Backlog" TargetFind="" SourceProject="Reporting" SourceView="Backlog" SourceFind="">
      <ColumnMapping>
        <Source>
          <CustomColumn Name="Number" />
        </Source>
        <Target>
          <Points />
        </Target>
      </ColumnMapping>
      <ColumnMapping>
        <Source>
          <EstimatedDays />
        </Source>
        <Target>
          <CustomColumn Name="Length" />
        </Target>
      </ColumnMapping>
      <ColumnMapping>
        <Source>
          <CustomColumn Name="Text" />
        </Source>
        <Target>
          <CustomColumn Name="Folk" />
        </Target>
      </ColumnMapping>
      <ColumnMapping>
        <Source>
          <CustomColumn Name="Time spent" />
        </Source>
        <Target>
          <Name />
        </Target>
      </ColumnMapping>
      <ColumnMapping>
        <Source>
          <Status />
        </Source>
        <Target>
          <Risk />
        </Target>
      </ColumnMapping>
      <ColumnMapping>
        <Source>
          <Risk />
        </Source>
        <Target>
          <Status />
        </Target>
      </ColumnMapping>
    </CopyBehavior>
    -->
    <!-- 
    Derive Behavior
    ===============
    The derive behavior is used to have a column value that is derived automatically based on the values of other columns and items.
    
    How the derived value should be calculated is specified by a C# expression in the Expression attribute of the configuration settings below.
    
    Simple expressions can be specified directly. If you have more complex expressions it is reccommended that you do the calculation in a separate
    DLL that is loaded in the LoadAssemblies section of JeanSettings.xml (see above).

    You can always refer to the current task with current_task. Note that this will be a task object provided by the ObjectWrapper. You can return
    any value in the expression but for the behavior to work the following constraints apply:
    
    Builtin columns
    '''''''''''''''
    The following builtin columns are currently supported:
    * Risk
    * Priority
    * EstimatedDays
    * Category
    * Points
    * Status
    * Confidence
    * Hyperlink
    * Name
    * WorkRemaining
    
    For numeric and plain text columns you specify the value as it is displayed in the Hansoft client. This is applies for the following columns:
    * EstimatedDays - The expression should return a floating point value or a value that can be converted to floating point.
    * Points - The expression should return an integer value or a value that can be converted to an integer.
    * Hyperlink - Any type of expression is allowed as its ToString() method will be applied.
    * Name - Any type of expression is allowed as its ToString() method will be applied.
    * WorkRemaining - The expression should return a floating point value or a value that can be converted to floating point.
    
    For enumerables you should specify the ordinal number corresponding to the enum value. The expression should return an integer or a value
    that can be convereted to an integer. This applies for the following columns:
    * Risk (Low Risk = 2, Medium Risk = 3, High Risk = 4)
    * Priority (Very Low Priority = 2, Low Priority = 3, Medium Priority = 4, High Priority = 5, Very High Priority = 6)
    * Category (Requirement = 2, Enhancement = 3, Technology upgrade = 4, Bug(A) = 5, Bug(B) = 6, Bug(C) = 7, Bug(D) = 8)
    * Status (Not done = 2, In progress = 3, Completed = 4, Blocked = 5, To be deleted = 6)
    * Confidence (Low Confidence = 2, Medium Confidence = 3, High Confidence = 4)
    
    Custom columns
    ''''''''''''''
    For columns of the following types you specify the value as it is displayed in the Hansoft client:
    * Text
    * Hyperlink
    * Droplist single choice
    * Droplist multiple choice. The differen items are separated by semicolon (;),
    * Number
    * Number with Decimals
    * Time spent
    * People
    
    Other columns
    * When specifying default values for For multiline text columns you insert line breaks with \n and backslashes with \\.
    * Default values for Date columns should be specified in the Short Date Format as specified in the Windows Region and Language settings.
    * Default values for Date Time columns should be specified in the Long Time Format as specified in the Windows Region and Language settings. Note
      however that the actual time value should be specified as UTC, not the local time.
    
    NOTE: To specify a string constant in the expression you will need to replace double quoutes with  "&quot;" to make sure that the XML attribute
    value specifying the expression is parsed correctly.
    
    NOTE: Floating point values always use period (.) as the decimal symbol, regardless of the Region settings in Windows. I.e., you should specify
    values as they appear in Hansoft.
    
    Examples:
    1. Set the custom column child count to the number of children of the current task
    <CustomColumn Name="Child count" Expression="current_task.Children.Count" />
    
    2. Set the Points column to the same value as the EstimatedDays column.
    <Points Expression="current_task.EstimatedDays" />
    
    3. Set the custom column completion count to the result of the static function CompletionCount defined in the CompletionCounter class which is a custom
    class defined in an assembly that is loaded in the <LoadAssemblies> section.
    <CustomColumn Name="Completion count" Expression="Hansoft.Jean.Behavior.DeriveBehavior.Expressions.CompletionCounter.CompletionCount(current_task)" />
    
    4. Other various examples     
      <CustomColumn Name="Custom Hyperlink" Expression="&quot;http://www.hansoft.com&quot;" />
      <CustomColumn Name="Datum" Expression="DateTime.Now" />
      <CustomColumn Name="Datum och Tid" Expression="DateTime.Now" />
      <CustomColumn Name="Number" Expression="current_task.EstimatedDays" />
      <CustomColumn Name="Text" Expression="current_task.Parent" />
      <CustomColumn Name="Multi Line" Expression="&quot;Muchos Textos. \n This is a new line \n this is the third line This is a backslash\\.&quot;" />
      <CustomColumn Name="Single Choice" Expression="&quot;No&quot;" />
      <CustomColumn Name="Multiple Choice" Expression="&quot;One;Three&quot;" />
      <CustomColumn Name="Folk" Expression="&quot;Svante;Cyborgs;Manager Jim&quot;" />
      <CustomColumn Name="Time spent" Expression="4.3" />
      <CustomColumn Name="Length" Expression="DateTime.Now.Year" />
      <WorkRemaining Expression="40.2" />
      <Risk Expression="3" />
      <Priority Expression="3" />
      <Category Expression="3" />
      <Confidence Expression="3" />
      <Status Expression="3" />
      <EstimatedDays Expression="5" />
      <Points Expression="10" />
      <Hyperlink Expression="&quot;http://www.hansoft.com&quot;" />
      <Name Expression="&quot;My new backlog item&quot;" />
    -->
    <DeriveBehavior HansoftProject="Development Program" View="Backlog" Find="">
      <CustomColumn Name="Aggregated Status" Expression="current_task.AggregatedStatus" />
      <CustomColumn Name="Aggregated Estimated days" Expression="current_task.AggregatedEstimatedDays" />
      <CustomColumn Name="Days completed" Expression="current_task.DeepLeaves.FindAll(task => ((Task)task).Status.Equals(EHPMTaskStatus.Completed)).Sum(task => ((Task)task).EstimatedDays)" />
      <CustomColumn Name="Completion count" Expression="Hansoft.Jean.Behavior.DeriveBehavior.Expressions.CompletionCounter.CompletionCount(current_task)" />
    </DeriveBehavior>
    <!-- 
    Default Value Behavior
    ======================
    This behavior is used to set a column to a default value whenever an item is created. Depending on the type of the
    column the value should be specified as follows:
    
    HansoftProject           : The Hansoft project containing the items to which data should be copied
    View                     : Specifies the View for which the default value is applicable (Agile, Scheduled, Bugs, Backlog)
    
    Builtin columns
    '''''''''''''''
    The following builtin columns are currently supported:
    * Risk
    * Priority
    * EstimatedDays
    * Category
    * Points
    * Status
    * Confidence
    * Hyperlink
    * Name
    * WorkRemaining
    
    For numeric and plain text columns you specify the value as it is displayed in the Hansoft client. This is applies for the following columns:
    * EstimatedDays
    * Points
    * Hyperlink
    * Name
    * WorkRemaining
    
    For enumerables you should specify the ordinal number corresponding to the enum value. This applies for the following columns:
    * Risk (Low Risk = 2, Medium Risk = 3, High Risk = 4)
    * Priority (Very Low Priority = 2, Low Priority = 3, Medium Priority = 4, High Priority = 5, Very High Priority = 6)
    * Category (Requirement = 2, Enhancement = 3, Technology upgrade = 4, Bug(A) = 5, Bug(B) = 6, Bug(C) = 7, Bug(D) = 8)
    * Status (Not done = 2, In progress = 3, Completed = 4, Blocked = 5, To be deleted = 6)
    * Confidence (Low Confidence = 2, Medium Confidence = 3, High Confidence = 4)
    
    Custom columns
    ''''''''''''''
    For columns of the following types you specify the value as it is displayed in the Hansoft client:
    * Text
    * Hyperlink
    * Droplist single choice
    * Droplist multiple choice. The differen items are separated by semicolon (;),
    * Number
    * Number with Decimals
    * Time spent
    * People
    
    Other columns
    * When specifying default values for For multiline text columns you insert line breaks with \n and backslashes with \\.
    * Default values for Date columns should be specified in the Short Date Format as specified in the Windows Region and Language settings.
    * Default values for Date Time columns should be specified in the Long Time Format as specified in the Windows Region and Language settings. Note
      however that the actual time value should be specified as UTC, not the local time.
    --> 
    <DefaultValueBehavior HansoftProject="Development Program" View="Backlog">
      <Name DefaultValue="As a (role) I want to (something) so I can (benefit)" />
    </DefaultValueBehavior>
  </Behaviors>
</Configuration>